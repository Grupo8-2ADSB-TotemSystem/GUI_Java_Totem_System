/*
 * The MIT License
 *
 * Copyright 2022 Vinícius.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package com.mycompany.totem_system;

import java.util.List;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;

/**
 *
 * @author Vinícius
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        estacaoTotem1 = new javax.swing.JLabel();
        marcaTotem1 = new javax.swing.JLabel();
        soTotem1 = new javax.swing.JLabel();
        ramTotem1 = new javax.swing.JLabel();
        ramDispTotem1 = new javax.swing.JLabel();
        cpuTotem1 = new javax.swing.JLabel();
        tempTotem1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel1.setText("Totem System");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jPanel9.setBackground(new java.awt.Color(102, 102, 255));

        jLabel40.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel40.setText("Totem");

        jLabel41.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel41.setText("RAM em uso: ");

        jLabel42.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel42.setText("CPU em uso: ");

        jLabel43.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel43.setText("Sistema Op.: ");

        jLabel45.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel45.setText("Estação: ");

        jLabel46.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel46.setText("Marca: ");

        jLabel47.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel47.setText("RAM disponível: ");

        jLabel48.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel48.setText("Temperatura");

        estacaoTotem1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        estacaoTotem1.setText("---");

        marcaTotem1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        marcaTotem1.setText("---");

        soTotem1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        soTotem1.setText("---");

        ramTotem1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        ramTotem1.setText("0");

        ramDispTotem1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        ramDispTotem1.setText("0");

        cpuTotem1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        cpuTotem1.setText("0");

        tempTotem1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        tempTotem1.setText("0");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel45)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(estacaoTotem1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel46)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(marcaTotem1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 20, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel41)
                                .addGap(8, 8, 8)
                                .addComponent(ramTotem1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel47)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ramDispTotem1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel48)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tempTotem1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(soTotem1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(jLabel42)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cpuTotem1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel43))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jLabel40)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(estacaoTotem1))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(marcaTotem1))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(ramTotem1))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(ramDispTotem1))
                .addGap(19, 19, 19)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(cpuTotem1))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(soTotem1))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(tempTotem1))
                .addGap(20, 20, 20))
        );

        jButton1.setBackground(new java.awt.Color(102, 102, 255));
        jButton1.setText("Atualizar Dados");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        Connection connection = new Connection();
        JdbcTemplate con = connection.getConnection();

      // Totem 1
        // Atualizar dados da Estação
        List<Estacao> estacaoT1 = con.query("SELECT idEstacao, fkEndereco, nomeEstacao FROM estacao JOIN totem ON totem.fkEstacao = estacao.idEstacao WHERE totem.fkEstacao = 1;", new BeanPropertyRowMapper(Estacao.class));
        for (Estacao dado : estacaoT1) {
            String estacao = dado.getNomeEstacao();
            estacaoTotem1.setText(estacao);
        }

        // Atualizar dados da Marca
        List<Totem> totemT1 = con.query("SELECT * FROM totem WHERE idTotem = 1;", new BeanPropertyRowMapper(Totem.class));
        for (Totem dado : totemT1) {
            String marca = dado.getMarca();
            marcaTotem1.setText(marca);

            String so = dado.getSo();
            soTotem1.setText(so);
        }

        // Atualizar dados da CPU
        List<Dado> cpuT1 = con.query("SELECT * FROM dado WHERE data_dado = (select max(data_dado) from dado where fkTotem = 1);", new BeanPropertyRowMapper(Dado.class));

        for (Dado dado : cpuT1) {
            String cpuUso = dado.getProcessadorUso();
            cpuTotem1.setText(cpuUso);
            // Atualizar memoria RAM
            String ramUso = dado.getMemoriaUso();
            ramTotem1.setText(ramUso);
            String ramDisp = dado.getMemoriaDisponivel();
            ramDispTotem1.setText(ramDisp);
            // Atualizar Temperatura
            String temp = String.valueOf(dado.getTemperatura());
            tempTotem1.setText(temp);
        }
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
//      // Totem 2
//        // Atualizar dados da Estação
//        List<Estacao> estacaoT2 = con.query("SELECT idEstacao, fkEndereco, nomeEstacao FROM estacao JOIN totem ON totem.fkEstacao = estacao.idEstacao WHERE totem.fkEstacao = 1;", new BeanPropertyRowMapper(Estacao.class));
//        for (Estacao dado : estacaoT2) {
//            String estacao = dado.getNomeEstacao();
//            estacaoTotem2.setText(estacao);
//        }
//
//        // Atualizar dados da Marca
//        List<Totem> totemT2 = con.query("SELECT * FROM totem WHERE idTotem = 2;", new BeanPropertyRowMapper(Totem.class));
//        for (Totem dado : totemT2) {
//            String marca = dado.getMarca();
//            marcaTotem2.setText(marca);
//
//            String so = dado.getSo();
//            soTotem2.setText(so);
//        }
//
//        // Atualizar dados da CPU
//        List<Dado> cpuT2 = con.query("SELECT * FROM dado WHERE data_dado = (select max(data_dado) from dado where fkTotem = 2);", new BeanPropertyRowMapper(Dado.class));
//
//        for (Dado dado : cpuT2) {
//            String cpuUso = dado.getProcessadorUso();
//            cpuTotem2.setText(cpuUso);
//            // Atualizar memoria RAM
//            String ramUso = dado.getMemoriaUso();
//            ramTotem2.setText(ramUso);
//            String ramDisp = dado.getMemoriaDisponivel();
//            ramDispTotem2.setText(ramDisp);
//            // Atualizar Temperatura
//            String temp = String.valueOf(dado.getTemperatura());
//            tempTotem2.setText(temp);
//        }
//        
//// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
//      // Totem 3
//        // Atualizar dados da Estação
//        List<Estacao> estacaoT3 = con.query("SELECT idEstacao, fkEndereco, nomeEstacao FROM estacao JOIN totem ON totem.fkEstacao = estacao.idEstacao WHERE totem.fkEstacao = 3;", new BeanPropertyRowMapper(Estacao.class));
//        for (Estacao dado : estacaoT3) {
//            String estacao = dado.getNomeEstacao();
//            estacaoTotem3.setText(estacao);
//        }
//
//        // Atualizar dados da Marca
//        List<Totem> totemT3 = con.query("SELECT * FROM totem WHERE idTotem = 3;", new BeanPropertyRowMapper(Totem.class));
//        for (Totem dado : totemT3) {
//            String marca = dado.getMarca();
//            marcaTotem3.setText(marca);
//
//            String so = dado.getSo();
//            soTotem3.setText(so);
//        }
//
//        // Atualizar dados da CPU
//        List<Dado> cpuT3 = con.query("SELECT * FROM dado WHERE data_dado = (select max(data_dado) from dado where fkTotem = 3);", new BeanPropertyRowMapper(Dado.class));
//
//        for (Dado dado : cpuT3) {
//            String cpuUso = dado.getProcessadorUso();
//            cpuTotem3.setText(cpuUso);
//            // Atualizar memoria RAM
//            String ramUso = dado.getMemoriaUso();
//            ramTotem3.setText(ramUso);
//            String ramDisp = dado.getMemoriaDisponivel();
//            ramDispTotem3.setText(ramDisp);
//            // Atualizar Temperatura
//            String temp = String.valueOf(dado.getTemperatura());
//            tempTotem3.setText(temp);
//        } 
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cpuTotem1;
    private javax.swing.JLabel estacaoTotem1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel marcaTotem1;
    private javax.swing.JLabel ramDispTotem1;
    private javax.swing.JLabel ramTotem1;
    private javax.swing.JLabel soTotem1;
    private javax.swing.JLabel tempTotem1;
    // End of variables declaration//GEN-END:variables
}
